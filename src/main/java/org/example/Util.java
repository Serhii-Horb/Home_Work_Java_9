package org.example;import java.util.Arrays;import java.util.Scanner;import static org.example.Const.*;public class Util {    public static void printResult(Integer[] winNums, Integer[] userNums) {            System.out.println("Пользовательские номера: " + Arrays.toString(winNums));            System.out.println("Выиграшные номера: " + Arrays.toString(userNums));            System.out.println("Выиграшных чисел: " + countWinNum(userNums, winNums));        }    public static Integer[] inputUserData() {        Integer tempNum;        Integer[] userNums = new Integer[USER_NUM];        Scanner sc = new Scanner(System.in);        for (int i = 0; i < userNums.length; i++) {            while (true) {                System.out.println("Input a " + (i + 1) + " number (from 1 to 50)");                tempNum = sc.nextInt();                if ((tempNum < 1 || tempNum > RANGE) || isNotUniq(userNums, tempNum)) {                    System.out.println("Your number is out of range or not uniq. Try again");                } else {                    userNums[i] = tempNum; // тестируем длину массива на совпадение с константами                    break;                }            }        }        return userNums;    }    public static boolean isNotUniq(Integer[] arr, Integer key) {        boolean result = false;        for (int i = 0; i < arr.length; i++) {            if (arr[i] == key) {                result = true;                break;            }        }        return result;    }    public static Integer[] createWinData() {        int curNum;        Integer[] winNums = new Integer[WIN_NUM];        for (int i = 0; i < winNums.length; i++) {            curNum = (int) ((Math.random() * (RANGE - 1)) + 1);            while (isNotUniq(winNums, curNum)) {                curNum = (int) ((Math.random() * (RANGE - 1)) + 1);            }            winNums[i] = curNum;        }        return winNums;    }    public static Integer countWinNum(Integer[] userData, Integer[] winData) {        Integer winsCount = 0;        for (int i = 0; i < userData.length; i++) {            for (int j = 0; j < winData.length; j++) {                if (userData[i] == winData[j]) {                    winsCount++;                }            }        }        return winsCount;    }}